use PurdueCircle;

CREATE TABLE Post (
postID INT NOT NULL AUTO_INCREMENT,
tagID VARCHAR(30),
username VARCHAR(20),
likesCount INT,
dislikeCount INT,
postCaption VARCHAR(200),
timeStamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
numberOfComments INT,
anonymous BOOL,
url VARCHAR(200),
hyperlink VARCHAR(200),
Primary Key(postID),
FOREIGN KEY (username) REFERENCES User(username)
ON DELETE CASCADE
);

CREATE TABLE UserLike (
    username VARCHAR(20),
    postID INT,
    timeStamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(username, postID),
FOREIGN KEY (username) REFERENCES User(username) ON DELETE CASCADE,
FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE
);

CREATE TABLE UserDisLike (
    username VARCHAR(20),
    postID INT,
    timeStamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(username, postID),
    FOREIGN KEY (username) REFERENCES User(username) ON DELETE CASCADE,
    FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE
);

CREATE TABLE User (
username VARCHAR(20) Primary Key,
firstName VARCHAR(20),
lastName VARCHAR(20),
password VARCHAR(60),
email VARCHAR(25),
bio VARCHAR(200),
private BOOL,
url VARCHAR(200)
);

CREATE table UnverifiedUser(
username nvarchar(50),
email nvarchar(50), 
password nvarchar(200), 
confirmationCode int
);

CREATE TABLE Tag (
tagID VARCHAR(30) Primary Key,
numberOfUsersSubscribed INT(20)
);

CREATE TABLE Comments (
postID INT,
username VARCHAR(30),
timeStamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
comment VARCHAR(300),
FOREIGN KEY (username) REFERENCES User(username) ON DELETE CASCADE,
FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE
);

CREATE TABLE Bookmark (
username VARCHAR(30),
postID INT,
timestamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (username) REFERENCES User(username) ON DELETE CASCADE,
FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE
);

CREATE TABLE UserFollow (
followed VARCHAR(30),
follower VARCHAR(30),
timestamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (followed) REFERENCES User(username) ON DELETE CASCADE,
FOREIGN KEY (follower) REFERENCES User(username) ON DELETE CASCADE
);

CREATE TABLE TagFollow (
username VARCHAR(30),
tagID VARCHAR(30),
timestamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (username) REFERENCES User(username) ON DELETE CASCADE
);

CREATE TABLE Block (
    userBlocking varchar(20),
    userBlocked varchar(20)
);

CREATE TABLE Messages (
    fromUser varchar(20),
    toUser varchar(20),
    message varchar(500),
	conversationID int,
    timeStamp datetime
);

create table Conversations (
	conversationID int NOT NULL auto_increment,
    user1 varchar(20),
    user2 varchar(20),
    PRIMARY KEY (conversationID)
);